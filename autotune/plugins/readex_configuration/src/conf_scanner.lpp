%{
#include <iostream>
//#include "y.tab.h"
#include "conf_parser.hpp"
using namespace std;
#define YY_DECL extern "C" int yylex()
int line_num = 1;
%}
%option noyywrap
%x VARS
%x VALUES
%x INTERVAL
%x COMMENT
%x LINE
%x MPI_TYPE
%x OPERAND
%x PATHSTMT
%%

[ \t]                                {;}
input_file                           {return FILENAME;}
template_file                        {return TEMPLATEFILENAME;}
configuration                        {return CONFIGURATION;}
application_parameters               {return APPLICATIONPARAMETERS;}
parameter                            {return PARAMETER;}
values                               {return VALUESSTR;}
search_algorithm                     {return SEARCHALG;}
individual_keep                      {return INDIVIDUALKEEP;}
sample_count                         {return SAMPLECOUNT;}
gde3_population_size                 {return GDE3POPSIZE;}
results_file                         {return RESULTSFILE;}
objective                            {return OBJECTIVE;}
Energy                               {return ENERGY;}
NormalizedEnergy                     {return NORMALIZEDENERGY;}
CPUEnergy                            {return CPUENERGY;}
NormalizedCPUEnergy                  {return NORMALIZEDCPUENERGY;}
EDP                                  {return EDP;}
NormalizedEDP                        {return NORMALIZEDEDP;}
ED2P                                 {return ED2P;}
NormalizedED2P                       {return NORMALIZEDED2P;}
Time                                 {return TIME;}
NormalizedTime                       {return NORMALIZEDTIME;}
TCO                                  {return TCO;}
NormalizedTCO                        {return NORMALIZEDTCO;}
\[                                   |
\]                                   |
\;                                   |
\=                                   |
","                                  {return yytext[0];}
"//".*"\n"                           {line_num++;}
"\n"                                 {line_num++;}
[0-9]+                               {yylval.ival = atoi(yytext); return INT; }
\"[\-a-zA-Z$0-9_~*\@\,\)\(\ /\.-= ]+\" {yylval.sval = strdup(yytext)+1; yylval.sval[strlen(yylval.sval)-1]='\0';return STRING;}
.                                    {printf ("Error: (%c), Line %d\n", yytext[0], line_num); return (yytext[0]);}
%%
